Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2018-08-25T23:05:15-04:00

====== sort - example 1 ======
Created Saturday 25 August 2018

[[002 all templates:examples homepage template:examples template|examples template]] version: Wednesday 08/15/18 10:08:58 PM
command to get timestamp: __date '+%A %D %X'__ 

[[Home]]
[[002 all templates]]
[[00 TODO LIST]]
[[RHCSA exam:objectives]]
[[sort - examples]]

**KYWRD:** sort - example 1
**RHCSA Objective: **001a Access a shell prompt and issue commands with correct syntax

**Summary**
Sort a text file, first by the first column, then by the second column.

**Notes**
I used [[https://bit.ly|bit.ly]] to shorten the address of the unsorted list: 
* full address: https://raw.githubusercontent.com/RexDjere/RHCSA/master/lists/programming_languages/00_programming_languages_unsorted.txt
* shortened address: https://bit.ly/2LsAcZg

**Scenario**
Maria, a RHEL sysadmin at Red Hat, has an unsorted list of programming languages, 00_programming_languages_unsorted.txt: 
* Task 1: sort the list ascending by column 1, programming language, and save as 01_programming_languages_sorted.txt.
* Task 2: sort the list ascending by column 2, name, and save as 02_programming_languages_sorted.txt.


**sort - example 1 - tasks **(command line commands are __highlighted__)**:**
1. Startup your CentOS/RHEL system, and login as a normal user.
2. Download the **unsorted** programming languages list:
	a. __curl -L -o 00_programming_languages_unsorted.txt https://bit.ly/2LsAcZg__
3. Make sure that the download was correct by viewing the 1st ten lines of the downloaded file:
	a. __head 00_prog*__
4. Sort the file **ascending** by programming language; save it as **01_programming_languages_sorted.txt**:
	a. __sort 00_prog* > 01_programming_languages_sorted.txt__
5. Sort **01_programming_languages_sorted.txt** by the 2nd column, and save it as **02_programming_languages_sorted.txt**:
	a. Here we need the __-t";"__ option to tell sort to use ; as the delimiter.
	b. We also need the __-k2,2__ option to tell sort to sort: starting with the 2nd column, and ending with the 2nd column.
	c. So the command will look like this:
		1. __sort -t";" -k2,2 01_prog* > 02_programming_languages_sorted.txt__
6. See **Figure 1** below.
7. Clear the screen: __clear__
8. Replace the word "Unsorted" with "Sorted" in files 01* and 02* **(Figure 1a)**:
	a. **NOTE:** sed with the -i.bak option below replaces the string in-place, and saves a backup with the .bak extension.
	b. __sed -i.bak 's/0_Unsorted/0_Sorted/g' 01*__
	c. __sed -i.bak 's/0_Unsorted/0_Sorted/g' 02*__
9. Clear the screen: __clear__
10. View the original unsorted file **(Figure 2)**: __cat 00*__
11. Clear the screen: __clear__
12. View the sorted-by-language-name file **(Figure 3)**: __cat 01*.txt__
13. Clear the screen: __clear__
14. Vew the sorted-by-last-name file **(Figure 4**): __cat 02*.txt__

**Relevant sort - example 1 links:**
* N/A

**Relevant sort - example 1 Screenshots**

Figure 1 - Steps 1 through 5
{{./pasted_image.png}}

Figure 1a - Replace the word "Unsorted" with "Sorted" in Files 01* and 02*
{{./pasted_image002.png}}

Figure 2 - Unsorted
{{./pasted_image001.png}}

Figure 3 - Sorted by Programming Language
{{./pasted_image003.png}}

Figure 4 - Sorted by Last Name
{{./pasted_image004.png}}
