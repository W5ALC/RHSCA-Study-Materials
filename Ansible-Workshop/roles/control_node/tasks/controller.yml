---
- name: Download AAP tar.gz
  get_url:
    url: '{{ tower_installer_url | default(default_tower_url) }}'
    dest: /tmp/tower.tar.gz

- name: Create directory for Ansible Tower
  file: path=/tmp/tower_install state=directory

- name: Extract AAP tar.gz install
  unarchive:
    src: /tmp/tower.tar.gz
    dest: /tmp/tower_install
    remote_src: true
    extra_opts: ['--strip-components=1', '--show-stored-names']

- name: read in inventory data to determine if tower or controller
  slurp:
    src: "/tmp/tower_install/inventory"
  register: file_contents

- name: controller or tower
  set_fact:
    controller_or_tower: "{{ 'controller' if 'automationcontroller' in file_contents['content'] | b64decode else 'tower' }}"

- name: template inventory file for Ansible Controller Install
  template:
    src: "{{ controller_or_tower }}_install.j2"
    dest: /tmp/tower_install/inventory
  when: create_cluster is not defined or not create_cluster|bool

- name: template inventory file for Automation Controller Install
  template:
    src: tower_cluster_install.j2
    dest: /tmp/tower_install/inventory
  when: create_cluster is defined and create_cluster|bool

# sean note to self... should I remove the gpgcheck=0?
- name: run the Automation Controller installer
  shell: "./setup.sh -e gpgcheck=0"
  args:
    chdir: /tmp/tower_install
  async: 1400
  poll: 15

- name: wait for Automation Controller to be up
  uri:
    url: https://localhost/api/v2/ping/
    method: GET
    user: admin
    password: "{{admin_password}}"
    validate_certs: false
  register: check2
  # wait <= 10 minutes for a satisfactory result, which is
  #   - something is returned
  #   - instance_groups[*].capacity > 0
  #   - instances[*].capacity > 0
  # if capacity is 0, execution later fails with a seemingly unrelated urllib TLS version error
  # we only check instance{s,groups}[0] because we're not clustering
  until: check2.json is defined and check2.json.instances[0].capacity > 0 and check2.json.instance_groups[0].capacity > 0
  retries: 60
  delay: 10

- name: Display /api/v2/ping results
  debug:
    msg: '{{ check2.json }}'

- name: install ansible-tower-cli and requests
  become: true
  pip:
    name:
      - ansible-tower-cli
      - "requests==2.6.0"
    state: latest

- name: Install venv
  include_tasks: venv.yml

- name: Post license key
  uri:
    url: https://{{ansible_host}}/api/v2/config/
    method: POST
    user: admin
    password: "{{admin_password}}"
    body: "{{ tower_license }}"
    body_format: json
    validate_certs: false
    force_basic_auth: true
  when: not use_manifest

- block:
    - name: Load manifest into variable
      local_action:
        module: slurp
        src: "{{ playbook_dir }}/manifest.zip"
      register: manifest_file
      become: false

    - name: Post manifest file
      uri:
        url: https://{{ansible_host}}/api/v2/config/
        method: POST
        user: admin
        password: "{{admin_password}}"
        body: '{ "eula_accepted": true, "manifest": "{{ manifest_file.content }}" }'
        body_format: json
        validate_certs: false
        force_basic_auth: true
  when: use_manifest
